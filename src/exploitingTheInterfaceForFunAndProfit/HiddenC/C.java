/**
 * Java 
 * 
 * @author:  Rub√©n Hortas Astariz <http://rubenhortas.blogspot.com.es>
 * @contact: rubenhortas at gmail.com
 * @web:     http://www.rubenhortas.blogspot.com.es
 * @github:  http://github.com/rubenhortas
 * @license: CC BY-NC-SA 3.0 <http://creativecommons.org/licenses/by-nc-sa/3.0/>
 * @file:    C.java
 */

package exploitingTheInterfaceForFunAndProfit.HiddenC;

import ExploitingTheInterfaceForFunAndProfit.IA;

class C implements IA {

	/** Private methods **/
	@SuppressWarnings("unused")
	private void privateMethodFromC() {
		System.out.println("(private) C.privateMethodFromC");
	}

	/** Protected methods **/
	protected void protectedMethodFromC() {
		System.out.println("(protected) C.protectedMethodFromC");
	}

	/** Package access methods **/
	void packageAccessMethodFromC() {
		System.out.println("(package access) C.packageAccessMethodFromC");
	}

	/** Public methods **/
	public void publicMethodFromC() {
		System.out.println("(public) C.publicMethodFromC");
	}
	
	@Override
	public void methodFromA() {
		System.out.println("(public) C.methodFromA");
	}
}
