/**
 * Java 
 * 
 * @author:  Rub√©n Hortas Astariz <http://rubenhortas.blogspot.com.es>
 * @contact: rubenhortas at gmail.com
 * @web:     http://www.rubenhortas.blogspot.com.es
 * @github:  http://github.com/rubenhortas
 * @license: CC BY-NC-SA 3.0 <http://creativecommons.org/licenses/by-nc-sa/3.0/>
 * @file:    InterfaceViolation.java
 */

package ExploitingTheInterfaceForFunAndProfit;

/**
 * Example extracted from the book "Thinking in Java" of Bruce Eckel.
 */
public class InterfaceViolation {

	public static void main(String[] args) {
		IA a = new B();

		System.out.println(String.format("a is implemented as %s", a.getClass()
				.getName()));
		a.methodFromA();
		// a.methodFromB(); // Compile error

		/*
		 * A has been implemented as as B. By casting a to B we can call a
		 * method that's not in A.
		 */
		if (a instanceof B) {
			System.out.println("Casting a to B");
			B b = (B) a;
			b.methodFromA();
			b.methodFromB();
		}
	}
}
